# the names of the data in each cell
_schema = [
    "cell text",
    "row_nums",
    "column_nums"
]

# cleaner, well, at least leaner, format of cell data; maybe we should also consider using this for
# the code in tables.py
_data = {
	"table-multi-row-column-cells.png": [
		("Disability Category", [0, 1], [0]),
		("Participants", [0, 1], [1]),
		("Ballots Completed", [0, 1], [2]),
		("Ballots Incomplete/Terminated", [0, 1], [3]),
		("Results", [0], [4, 5]),
		("Accuracy", [1], [4]),
		("Time to complete", [1], [5]),
		("Blind", [2], [0]),
		("Low Vision", [3], [0]),
		("Dexterity", [4], [0]),
		("Mobility", [5], [0]),
		("5", [2], [1]),
		("5", [3], [1]),
		("5", [4], [1]),
		("3", [5], [1]),
		("1", [2], [2]),
		("2", [3], [2]),
		("4", [4], [2]),
		("3", [5], [2]),
		("4", [2], [3]),
		("3", [3], [3]),
		("1", [4], [3]),
		("0", [5], [3]),
		("34.5%, n=1", [2], [4]),
		("98.3% n=2 (97.7%, n=3)", [3], [4]),
		("98.3%, n=4", [4], [4]),
		("95.4%, n=3", [5], [4]),
		("1199 sec, n=1", [2], [5]),
		("1716 sec, n=3 (1934 sec, n=2)", [3], [5]),
		("1672.1 sec, n=4", [4], [5]),
		("1416 sec, n=3", [5], [5])
	],
    "ilpa-example-1.jpg": [
        ("Portfolio Summary\nexamples", [0], [0, 1, 2, 3]),
        ("", [1], [0]),
        ("", [1], [1]),
        ("Total", [1], [2]),
        ("Investor", [1], [3]),
        ("MasterFund", [2], [0]),
        ("Atlantic Fund 3", [2], [1]),
        ("", [2], [2]),
        ("", [2], [3]),
        ("MFTotalCommitment", [3], [0]),
        ("400", [3], [1]),
        ("", [3], [2]),
        ("", [3], [3]),
        ("FundName", [4], [0]),
        ("Atlantic Fund 3 AIV 1", [4], [1]),
        ("", [4], [2]),
        ("", [4], [3]),
        ("FNTotalCommitment", [5], [0]),
        ("100", [5], [1]),
        ("", [5], [2]),
        ("", [5], [3]),
        ("InvestorCommittment", [6], [0]),
        ("10", [6], [1]),
        ("", [6], [2]),
        ("", [6], [3]),
        ("InvesteeName", [7], [0]),
        ("Chrysler Inc", [7], [1]),
        ("", [7], [2]),
        ("", [7], [3]),
        ("TotalInvested", [8], [0]),
        ("", [8], [1]),
        ("20", [8], [2]),
        ("2", [8], [3]),
        ("", [9], [0]),
        ("", [9], [1]),
        ("Total", [9], [2]),
        ("Investor", [9], [3]),
        ("MasterFund", [10], [0]),
        ("Atlantic Fund 3", [10], [1]),
        ("", [10], [2]),
        ("", [10], [3]),
        ("MFTotalCommitment", [11], [0]),
        ("400", [11], [1]),
        ("", [11], [2]),
        ("", [11], [3]),
        ("FundName", [12], [0]),
        ("Atlantic Fund 3", [12], [1]),
        ("", [12], [2]),
        ("", [12], [3]),
        ("FNTotalCommitment", [13], [0]),
        ("100", [13], [1]),
        ("", [13], [2]),
        ("", [13], [3]),
        ("InvestorCommittment", [14], [0]),
        ("10", [14], [1]),
        ("", [14], [2]),
        ("", [14], [3]),
        ("InvesteeName", [15], [0]),
        ("Chrysler Inc", [15], [1]),
        ("", [15], [2]),
        ("", [15], [3]),
        ("TotalInvested", [16], [0]),
        ("", [16], [1]),
        ("80", [16], [2]),
        ("2", [16], [3]),
    ]
}

# actual cell data in the same format as those returned by tables.py
data = {fname: [dict(zip(_schema, cell)) for cell in cells] for fname, cells in _data.items()}
